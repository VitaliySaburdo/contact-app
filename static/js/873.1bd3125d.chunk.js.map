{"version":3,"file":"static/js/873.1bd3125d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","components/RegistrationContainer/RegestrationContainer.styled.jsx","components/RegistrationContainer/RegestrationContainer.jsx","pages/Register.jsx"],"sourcesContent":["import { Audio } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return(<Audio\n    height = \"80\"\n    width = \"80\"\n    radius = \"9\"\n    color = '#455a64'\n    ariaLabel = 'three-dots-loading'     \n    wrapperStyle={{\n        position: 'fixed',\n        top: '5%',\n        left: '50%',\n      }}\n        wrapperClass=\"blocks-wrapper\"\n        \n  />)\n\n}\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    padding-top: 50px;\n    padding-bottom: 50px;\n  }\n\n  @media screen and (${props => props.theme.media.lg}) {\n    padding-top: 60px;\n    padding-bottom: 60px;\n  }\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection {...props} />;\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  margin-left: auto;\n  padding-top: 10px;\n  padding-left: 20px;\n  padding-right: 20px;\n  @media screen and (${p => p.theme.media.md}) {\n    padding-top: 10px;\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n  @media screen and (${p => p.theme.media.lg}) {\n    padding-top: 70px;\n    padding-left: 80px;\n    padding-right: 80px;\n  }\n`;\n\nexport const Box = styled.div`\n  width: 620px;\n  margin-left: auto;\n`;\n\nexport const Title = styled.h2`\n  font-family: ${p => p.theme.fonts.second};\n  font-weight: 600px;\n  font-size: 19px;\n  text-align: center;\n  padding: 0 0 20px 0;\n  @media screen and (${p => p.theme.media.lg}){\n    padding: 0 0 60px 0;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 93%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n  font-family: ${p => p.theme.fonts.second};\n  font-weight: 400px;\n  font-size: 16px;\n  text-align: center;\n`;\nexport const Span = styled.span`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Box, Title, Text, Span } from './RegisterForm.styled';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport { selectLoading } from 'redux/auth/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst validationSchema = yup.object({\n  name: yup.string('Enter your Name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n  confirm: yup\n    .string('Please confirm your password')\n    .oneOf([yup.ref('password')], 'Password does not matched')\n    .required('Confirm Password is Required'),\n});\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n\n  const isLoading = useSelector(selectLoading);\n\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleClickShowConfirm = () => setShowConfirm(show => !show);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirm: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, email, password }) => {\n      dispatch(register({ name, email, password }));\n    },\n  });\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Box>\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>Register</Title>\n          <TextField\n            sx={{ height: 65 }}\n            placeholder=\"Please enter your name\"\n            fullWidth\n            size=\"small\"\n            margin=\"none\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Full name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <FormControl\n            sx={{\n              height: 65,\n            }}\n            fullWidth\n            size=\"small\"\n            margin=\"none\"\n          >\n            <InputLabel\n              error={formik.touched.email && Boolean(formik.errors.password)}\n              htmlFor=\"email\"\n            >\n              Email\n            </InputLabel>\n            <OutlinedInput\n              placeholder=\"Please your email\"\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n            />\n            <FormHelperText error={true} id=\"password\">\n              {formik.touched.email && formik.errors.email}\n            </FormHelperText>\n          </FormControl>\n          <FormControl\n            sx={{\n              height: 65,\n            }}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            margin=\"none\"\n          >\n            <InputLabel\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              htmlFor=\"password\"\n            >\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"password\"\n              placeholder=\"Please your password\"\n              name=\"password\"\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            <FormHelperText error={true} id=\"password\">\n              {formik.touched.password && formik.errors.password}\n            </FormHelperText>\n          </FormControl>\n          <FormControl\n            sx={{\n              height: 65,\n            }}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            margin=\"none\"\n          >\n            <InputLabel\n              error={formik.touched.confirm && Boolean(formik.errors.confirm)}\n              htmlFor=\"confirm\"\n            >\n              Confirm Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"confirm\"\n              placeholder=\"Please confirm your password\"\n              name=\"confirm\"\n              label=\"Confirm Password\"\n              type={showConfirm ? 'text' : 'password'}\n              value={formik.values.confirm}\n              onChange={formik.handleChange}\n              error={formik.touched.confirm && Boolean(formik.errors.confirm)}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowConfirm}\n                    edge=\"end\"\n                  >\n                    {showConfirm ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            <FormHelperText error={true} id=\"confirm\">\n              {formik.touched.confirm && formik.errors.confirm}\n            </FormHelperText>\n          </FormControl>\n          <Button\n            sx={{ marginTop: '10px' }}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n          >\n            Register\n          </Button>\n          <Text>\n            Already have an account\n            <Span>\n              <NavLink to=\"/login\">Login</NavLink>\n            </Span>\n          </Text>\n        </Form>\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../images/Registration-photo.jpg';\n\nexport const Container = styled.div`\n  display: none;\n  @media screen and (${p => p.theme.media.md}) {\n    display: block;\n    position: relative;\n    height: 400px;\n    width: 630px;\n    background-image: linear-gradient(\n        to right,\n        rgba(47, 48, 58, 0.4),\n        rgba(47, 48, 58, 0.4)\n      ),\n      url(${img});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    @media screen and (${p => p.theme.media.lg}) {\n      height: 680px;\n      width: 730px;\n    }\n  }\n`;\n\nexport const Title = styled.div`\n  position: absolute;\n  width: 350px;\n  left: 3%;\n  top: 28%;\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 16px;\n  text-align: center;\n  color: ${p => p.theme.colors.clearWhite};\n  z-index: 100;\n  @media screen and (${p => p.theme.media.lg}){\n    font-size: 22px;\n    left: 25%;\n    top: 25%;\n  }\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: linear-gradient(\n    to right,\n    rgba(47, 48, 58, 0.4),\n    rgba(47, 48, 58, 0.4)\n  );\n`;\n","import { Container, Title } from './RegestrationContainer.styled';\n\nexport const RegistrationContainer = () => {\n  return (\n    <>\n      <Container>\n        <Title>The best service for creating and storing contacts</Title>\n      </Container>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegistrationContainer } from '../components/RegistrationContainer/RegestrationContainer';\nimport { Container } from 'components/Container/Container';\nimport { Section } from 'components/Section/Section';\n\nexport default function Register() {\n  return (\n    <Section>\n      <Container>\n        <div style={{ display: 'flex' }}>\n          <title>Registration</title>\n          <RegistrationContainer />\n          <RegisterForm />\n        </div>\n      </Container>\n    </Section>\n  );\n}\n"],"names":["Loader","_jsx","Audio","height","width","radius","color","ariaLabel","wrapperStyle","position","top","left","wrapperClass","StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","props","theme","media","md","lg","Section","_objectSpread","Form","form","p","Box","div","_templateObject2","Title","h2","_templateObject3","fonts","second","Text","Field","_templateObject4","_templateObject5","Span","span","_templateObject6","validationSchema","yup","name","required","email","password","min","confirm","oneOf","RegisterForm","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","showConfirm","setShowConfirm","isLoading","useSelector","selectLoading","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","_ref","register","_jsxs","_Fragment","children","handleSubmit","TextField","sx","placeholder","fullWidth","size","margin","id","label","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","FormControl","InputLabel","htmlFor","OutlinedInput","FormHelperText","variant","type","endAdornment","InputAdornment","IconButton","onClick","show","edge","VisibilityOff","Visibility","Button","marginTop","NavLink","to","Container","img","colors","clearWhite","RegistrationContainer","Register","style","display"],"sourceRoot":""}