{"version":3,"file":"static/js/77.7e3e2a57.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/LoginContainer/LoginContainer.styled.jsx","components/LoginContainer/LoginContainer.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: ${props => props.padTopSm || '40px'};\n  padding-bottom: ${props => props.padBottomSM || '40px'};\n\n  @media screen and (${props => props.theme.media.md}) {\n    height: calc(100vh - 96px);\n    padding-top: ${props => props.padTopMd || '80px'};\n    padding-bottom: ${props => props.padBottomMd || '80px'};\n  }\n\n  @media screen and (${props => props.theme.media.lg}) {\n    height: calc(100vh - 88px);\n    padding-top: ${props => props.padTopLg || '80px'};\n    padding-bottom: ${props => props.padBottomLg || '80px'};\n  }\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection {...props} />;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 680px;\n  width: 730px;\n  background-image: linear-gradient(324.93deg, #007aff 0.74%, #0f70da 100%);\n`;\n\nexport const Title = styled.div`\n  position: absolute;\n  width: 350px;\n  left: 20%;\n  top: 8%;\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const Circus = styled.div`\n  position: absolute;\n  left: 78px;\n  top: 100px;\n  padding: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 420px;\n  height: 420px;\n  border-radius: 50%;\n  background-image: linear-gradient(324.93deg, #0f70da 0.74%, #007aff 100%);\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n`;\n","import { Circus, Container, Title, Img } from './LoginContainer.styled';\nimport img from '../../images/phones.png';\n\nexport const LoginContainer = () => {\n  return (\n    <>\n      <Container>\n        <Title>\n          Quick creation of contacts, convenient menu, nice interface\n        </Title>\n        <Circus>\n          <Img src={img} alt=\"phone\" />\n        </Circus>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  margin-left: auto;\n  padding-top: 70px;\n  padding-left: 80px;\n  padding-right: 80px;\n`;\n\nexport const Box = styled.div`\n  width: 620px;\n  margin-left: auto;\n  background-color: white;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins';\n  font-weight: 600px;\n  font-size: 19px;\n  text-align: center;\n  padding: 0 0 60px 0;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 93%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n  background-color: #aae5ff;\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 16px;\n  text-align: center;\n`;\nexport const Span = styled.span`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Form, Box, Title, Text, Span } from './LoginForm.styled';\nimport { NavLink } from 'react-router-dom';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 8 characters length').max(12, 'Too long')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(logIn({ values }));\n    },\n  });\n\n  return (\n    <Box>\n      <Form onSubmit={formik.handleSubmit}>\n        <Title>Login</Title>\n        <FormControl\n          sx={{\n            height: 65,\n          }}\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n        >\n          <InputLabel\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            htmlFor=\"email\"\n          >\n            Email\n          </InputLabel>\n          <OutlinedInput\n            placeholder=\"Please your email\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n          />\n          <FormHelperText error={true} id=\"password\">\n            {formik.touched.email && formik.errors.email}\n          </FormHelperText>\n        </FormControl>\n        <FormControl\n          sx={{\n            height: 65,\n          }}\n          variant=\"outlined\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n        >\n          <InputLabel\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            htmlFor=\"password\"\n          >\n            Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"password\"\n            placeholder=\"Please your password\"\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <FormHelperText error={true} id=\"password\">\n            {formik.touched.password && formik.errors.password}\n          </FormHelperText>\n        </FormControl>\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Login\n        </Button>\n        <Text>\n          Don`t have an account\n          <Span>\n            <NavLink to=\"/register\">Register</NavLink>\n          </Span>\n        </Text>\n      </Form>\n    </Box>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { LoginContainer } from 'components/LoginContainer/LoginContainer';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Section } from 'components/Section/Section';\n\nexport default function Login() {\n  return (\n    <Section>\n      <Container>\n        <div style={{ display: 'flex' }}>\n          <LoginContainer />\n          <LoginForm />\n        </div>\n      </Container>\n    </Section>\n  );\n}\n"],"names":["StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","props","padTopSm","padBottomSM","theme","media","md","padTopMd","padBottomMd","lg","padTopLg","padBottomLg","Section","_jsx","_objectSpread","Container","div","Title","_templateObject2","Circus","_templateObject3","Img","img","_templateObject4","LoginContainer","_Fragment","children","_jsxs","src","alt","Form","form","Box","h2","Text","Field","p","_templateObject5","Span","span","_templateObject6","validationSchema","yup","email","required","password","min","max","LoginForm","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","logIn","handleSubmit","FormControl","sx","height","fullWidth","size","margin","InputLabel","error","touched","Boolean","errors","htmlFor","OutlinedInput","placeholder","id","name","label","value","onChange","handleChange","FormHelperText","variant","type","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","Button","color","NavLink","to","Login","style","display"],"sourceRoot":""}