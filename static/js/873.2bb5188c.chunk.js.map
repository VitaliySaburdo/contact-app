{"version":3,"file":"static/js/873.2bb5188c.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","components/RegistrationContainer/RegestrationContainer.styled.jsx","components/RegistrationContainer/RegestrationContainer.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  margin-left: auto;\n  padding-top: 70px;\n  padding-left: 80px;\n  padding-right: 80px;\n`;\n\nexport const Box = styled.div`\n  width: 620px;\n  margin-left: auto;\n  background-color: white;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins';\n  font-weight: 600px;\n  font-size: 19px;\n  text-align: center;\n  padding: 0 0 60px 0;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 93%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 16px;\n  text-align: center;\n`;\nexport const Span = styled.span`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Form, Box, Title, Text, Span } from './RegisterForm.styled';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\n\nconst validationSchema = yup.object({\n  name: yup.string('Enter your Name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n  confirm: yup\n    .string('Please confirm your password')\n    .oneOf([yup.ref('password')], 'Password does not matched')\n    .required('Confirm Password is Required'),\n});\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleClickShowConfirm = () => setShowConfirm(show => !show);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirm: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, email, password }) => {\n      dispatch(register({ name, email, password }));\n    },\n  });\n\n  return (\n    <Box>\n      <Form onSubmit={formik.handleSubmit}>\n        <Title>Register</Title>\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Please enter your name\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Full name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <FormControl\n          sx={{\n            height: 65,\n          }}\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n        >\n          <InputLabel\n            error={formik.touched.email && Boolean(formik.errors.password)}\n            htmlFor=\"email\"\n          >\n            Email\n          </InputLabel>\n          <OutlinedInput\n            placeholder=\"Please your email\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n          />\n          <FormHelperText error={true} id=\"password\">\n            {formik.touched.email && formik.errors.email}\n          </FormHelperText>\n        </FormControl>\n        <FormControl\n          sx={{\n            height: 65,\n          }}\n          variant=\"outlined\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n        >\n          <InputLabel\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            htmlFor=\"password\"\n          >\n            Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"password\"\n            placeholder=\"Please your password\"\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <FormHelperText error={true} id=\"password\">\n            {formik.touched.password && formik.errors.password}\n          </FormHelperText>\n        </FormControl>\n        <FormControl\n          sx={{\n            height: 65,\n          }}\n          variant=\"outlined\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n        >\n          <InputLabel\n            error={formik.touched.confirm && Boolean(formik.errors.confirm)}\n            htmlFor=\"confirm\"\n          >\n            Confirm Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"confirm\"\n            placeholder=\"Please confirm your password\"\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            type={showConfirm ? 'text' : 'password'}\n            value={formik.values.confirm}\n            onChange={formik.handleChange}\n            error={formik.touched.confirm && Boolean(formik.errors.confirm)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowConfirm}\n                  edge=\"end\"\n                >\n                  {showConfirm ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <FormHelperText error={true} id=\"confirm\">\n            {formik.touched.confirm && formik.errors.confirm}\n          </FormHelperText>\n        </FormControl>\n        <Button\n          sx={{ marginTop: '10px' }}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Register\n        </Button>\n        <Text>\n          Already have an account\n          <Span>\n            <NavLink to=\"/login\">Login</NavLink>\n          </Span>\n        </Text>\n      </Form>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../images/Registration-photo.jpg';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 680px;\n  width: 730px;\n  background-image: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    ),\n    url(${img});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Title = styled.div`\n  position: absolute;\n  width: 350px;\n  left: 25%;\n  top: 25%;\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 22px;\n  text-align: center;\n  color: #ffffff;\n  z-index: 100;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: linear-gradient(\n    to right,\n    rgba(47, 48, 58, 0.4),\n    rgba(47, 48, 58, 0.4)\n  );\n`;\n","import { Container, Title } from './RegestrationContainer.styled';\n\nexport const RegistrationContainer = () => {\n  return (\n    <>\n      <Container>\n        <Title>The best service for creating and storing contacts</Title>\n      </Container>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegistrationContainer } from '../components/RegistrationContainer/RegestrationContainer';\n\nexport default function Register() {\n  return (\n    <div style={{ display: 'flex' }}>\n      <title>Registration</title>\n      <RegistrationContainer />\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Box","div","_templateObject2","Title","h2","_templateObject3","Text","Field","_templateObject4","p","_templateObject5","Span","span","_templateObject6","validationSchema","yup","name","required","email","password","min","confirm","oneOf","RegisterForm","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","showConfirm","setShowConfirm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","_ref","register","_jsx","children","_jsxs","handleSubmit","TextField","sx","height","placeholder","fullWidth","size","margin","id","label","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","FormControl","InputLabel","htmlFor","OutlinedInput","FormHelperText","variant","type","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","Button","marginTop","color","NavLink","to","Container","img","RegistrationContainer","_Fragment","Register","style","display"],"sourceRoot":""}