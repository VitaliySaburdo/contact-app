{"version":3,"file":"static/js/480.5fd60877.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/contacts/selectors.js","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactsList/ContactsList.jsx","components/ContactsMenu/ContactsMenu.styled.jsx","components/ContactsMenu/ContactsMenu.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: ${props => props.padTopSm || '20px'};\n  padding-bottom: ${props => props.padBottomSM || '20px'};\n\n  @media screen and (${props => props.theme.media.mdToLg}) {\n    padding-top: ${props => props.padTopMd || '20px'};\n    padding-bottom: ${props => props.padBottomMd || '20px'};\n  }\n\n  @media screen and (${props => props.theme.media.lg}) {\n    padding-top: ${props => props.padTopLg || '40px'};\n    padding-bottom: ${props => props.padBottomLg || '40px'};\n  }\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection {...props} />;\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { Audio } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return(<Audio\n    height = \"80\"\n    width = \"80\"\n    radius = \"9\"\n    color = '#455a64'\n    ariaLabel = 'three-dots-loading'     \n    wrapperStyle={{\n        position: 'fixed',\n        top: '5%',\n        left: '50%',\n      }}\n        wrapperClass=\"blocks-wrapper\"\n        \n  />)\n\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 10px;\n  margin-bottom: 30px;\n  width: 440px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  margin-top: 15px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-style: italic;\n  font-weight: 700;\n  font-weight: 700;\n  font-size: 28px;\n  color: #455a64;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 95%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  width: 180px;\n  height: 40px;\n  cursor: pointer;\n  font-size: 16px;\n  color: white;\n  background-color: ${p => {\n    if (p.buttonLabel === 'Add contact') {\n      return 'green';\n    } else {\n      return 'orange';\n    }\n  }};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${p => {\n      if (p.buttonLabel === 'Add contact') {\n        return '#13ba00';\n      } else {\n        return '#FF9966';\n      }\n    }};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Container, Title, Form, Label, Button } from './ContactForm.styled';\n\nimport TextField from '@mui/material/TextField';\n\nexport function ContactForm({ buttonLabel, onSubmit, name, number }) {\n  const validationSchema = yup.object({\n    name: yup.string('Enter your Name').required('Name is required'),\n    number: yup\n      .string('Enter your phone number')\n      .matches(/^\\d+$/, 'Number should only contain numeric values')\n      .min(7, 'Number should be of minimum 7 characters length')\n      .required('Phone number is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: name || '',\n      number: number || '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, number }) => {\n      onSubmit({ name, number });\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          <TextField\n            sx={{ height: 65 }}\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Please enter contact name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            onClick={event => event.stopPropagation()}\n          />\n        </Label>\n        <Label>\n          <TextField\n            sx={{ height: 65 }}\n            fullWidth\n            size=\"small\"\n            type=\"tel\"\n            name=\"number\"\n            label=\"Phone number\"\n            placeholder=\"Enter a phone number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            error={formik.touched.number && Boolean(formik.errors.number)}\n            helperText={\n              formik.touched.number && formik.errors.number\n                ? formik.errors.number\n                : ' '\n            }\n            onClick={event => event.stopPropagation()}\n          />\n        </Label>\n        <Button type=\"submit\" buttonLabel={buttonLabel}>\n          {buttonLabel}\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nContactForm.prototype = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 420px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  margin-top: 15px;\n`;\n","import React from 'react';\nimport { Container, Label } from './Filter.styled';\nimport { findContact } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(findContact(e.target.value));\n  };\n\n  return (\n    <Container>\n      <Label>\n        <TextField\n          sx={{ width: 440 }}\n          size=\"small\"\n          type=\"text\"\n          label=\"Find contact by name\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </Label>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  overflow-y: scroll;\n  width: 540px;\n\n  height: 500px;\n  padding: 0;\n  border: 1px solid;\n  border-color: ${props => props.theme.colors.btnBorderColor};\n  border-radius: 5px;\n  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.07);\n\n  /* Styling the scrollbar */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #888;\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: #555;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #f2f2f2;\n  }\n`;\n\nexport const List = styled.ul`\n  display: block;\n  padding: 10px;\n`;\n\nexport const Item = styled.li`\n  font-family: 'Poppins', sans-serif;\n  font-style: italic;\n  font-weight: 700;\n  font-size: 16px;\n  display: flex;\n  height: 45px;\n  border-radius: 6px;\n  border: 1px solid;\n  border-color: rgba(0, 0, 0, 0.1);\n  justify-content: space-between;\n  margin-bottom: 15px;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.07);\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: 'Poppins';\n  font-weight: 400px;\n  font-size: 16px;\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  cursor: pointer;\n  font-size: 16px;\n  color: white;\n  background-color: ${props =>\n    props.edit ? 'orange' : props.delete ? '#de0000' : 'initial'};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${props =>\n      props.edit ? '#FF9966' : props.delete ? '#F44336' : 'initial'};\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst zoomIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden auto;\n  z-index: 1000;\n  background-color: rgba(0, 0, 0, 0.2);\n  animation: ${zoomIn} 0.3s ease-in;\n`;\n\nexport const ModalBody = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 20px;\n  background-color: #ffffff;\n  padding: 30px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  display: flex;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  background-color: transparent;\n`;\n","import { createPortal } from 'react-dom';\nimport { Overlay, ModalBody, CloseBtn } from './Modal.styled';\nimport { useEffect } from 'react';\nimport icons from '../../images/icons.svg';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClick, children }) => {\n  useEffect(() => {\n    const handleEscDown = e => {\n      if (e.code === 'Escape') {\n        onClick();\n      }\n    };\n    window.addEventListener('keydown', handleEscDown);\n    return () => {\n      window.removeEventListener('keydown', handleEscDown);\n    };\n  }, [onClick]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClick();\n    }\n  };\n\n  const handleCloseClick = () => {\n    onClick();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalBody>\n        <CloseBtn onClick={handleCloseClick}>\n          <svg width={17} height={17}>\n            <use href={icons + '#cross'}></use>\n          </svg>\n        </CloseBtn>\n        {children}\n      </ModalBody>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  Button,\n  List,\n  ButtonWrapper,\n  ListWrapper,\n} from './ContactsList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { putContact, fetchContacts } from '../../redux/contacts/operations';\n\nexport const ContactsList = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalContactId, setModalContactId] = useState(null);\n  const [nameContact, setNameContact] = useState(null);\n  const [numberContact, setNumberContact] = useState(null);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  const handleOpenModal = (id, name, number) => {\n    setIsOpen(true);\n    setModalContactId(id);\n    setNameContact(name);\n    setNumberContact(number);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleUpdateContact = async ({ name, number }) => {\n    await dispatch(\n      putContact({ contactId: modalContactId, contact: { name, number } })\n    );\n    handleCloseModal();\n    dispatch(fetchContacts());\n  };\n\n  const buttonLabel = 'Update contact';\n\n  return (\n    <>\n      <ListWrapper>\n        <List>\n          {visibleContact.map(contact => (\n            <Item key={contact._id}>\n              {contact.name}: {contact.number}\n              <ButtonWrapper>\n                <Button\n                  onClick={() => {\n                    handleOpenModal(contact._id, contact.name, contact.number);\n                  }}\n                  edit\n                >\n                  edit\n                </Button>\n                <Button\n                  onClick={() => dispatch(deleteContact(contact._id))}\n                  delete\n                >\n                  delete\n                </Button>\n              </ButtonWrapper>\n            </Item>\n          ))}\n        </List>\n        {isOpen && (\n          <Modal onClick={handleCloseModal}>\n            <ContactForm\n              onSubmit={handleUpdateContact}\n              buttonLabel={buttonLabel}\n              name={nameContact}\n              number={numberContact}\n            />\n          </Modal>\n        )}\n      </ListWrapper>\n    </>\n  );\n};\n\nContactsList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 60px;\n  height: 650px;\n`;\n\nexport const FormContainer = styled.div`\n  height: 420px;\n  padding: 20px;\n  border: 1px solid;\n  border-radius: 8px;\n  border-color: rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.07);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactsList } from '../ContactsList/ContactsList';\nimport { ContactContainer, FormContainer } from './ContactsMenu.styled';\n\n\n\n\nexport const ContactsMenu = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleAddContact = ({ name, number }) => {\n    const isNumberInContact = contacts.find(\n      contact =>\n        contact.number.toLocaleLowerCase() === number.toLocaleLowerCase()\n    );\n\n    if (isNumberInContact) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n  };\n\n  const buttonLabel = 'Add contact';\n\n  return (\n    <ContactContainer>\n      <FormContainer>\n        <ContactForm onSubmit={handleAddContact} buttonLabel={buttonLabel} />\n        <Filter />\n      </FormContainer>\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </ContactContainer>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsMenu } from 'components/ContactsMenu/ContactsMenu';\nimport { Container } from 'components/Container/Container';\nimport { Section } from 'components/Section/Section';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <ContactsMenu />\n        </Container>\n      </Section>\n    </>\n  );\n}\n"],"names":["StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","props","padTopSm","padBottomSM","theme","media","mdToLg","padTopMd","padBottomMd","lg","padTopLg","padBottomLg","Section","_jsx","_objectSpread","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Loader","Audio","height","width","radius","color","ariaLabel","wrapperStyle","position","top","left","wrapperClass","Form","form","Label","label","_templateObject2","Container","div","_templateObject3","Title","p","_templateObject4","Button","input","_templateObject5","button","_templateObject6","buttonLabel","ContactForm","_ref","onSubmit","name","number","validationSchema","yup","required","matches","min","formik","useFormik","initialValues","_ref2","resetForm","_jsxs","children","handleSubmit","TextField","sx","fullWidth","size","type","placeholder","value","values","onChange","handleChange","touched","Boolean","errors","helperText","onClick","event","stopPropagation","prototype","PropTypes","Filter","dispatch","useDispatch","useSelector","e","findContact","target","ListWrapper","colors","btnBorderColor","List","ul","Item","li","edit","delete","ButtonWrapper","zoomIn","keyframes","Overlay","ModalBody","CloseBtn","modalRoot","document","querySelector","Modal","useEffect","handleEscDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","href","icons","ContactsList","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","modalContactId","setModalContactId","_useState5","_useState6","nameContact","setNameContact","_useState7","_useState8","numberContact","setNumberContact","normalizeFilter","toLowerCase","visibleContact","contact","includes","handleCloseModal","handleUpdateContact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","putContact","contactId","fetchContacts","stop","_x","apply","arguments","_Fragment","map","id","_id","deleteContact","onDelete","ContactContainer","FormContainer","ContactsMenu","find","toLocaleLowerCase","alert","concat","addContact","Contacts"],"sourceRoot":""}